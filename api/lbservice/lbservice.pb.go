// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: api/lbservice/lbservice.proto

package lbservice

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type InstanceLicense int32

const (
	Instance_LB_INVALID_LIC InstanceLicense = 0
	Instance_LB_1GIG_LIC    InstanceLicense = 1024
	Instance_LB_10GIG_LIC   InstanceLicense = 10240
)

// Enum value maps for InstanceLicense.
var (
	InstanceLicense_name = map[int32]string{
		0:     "LB_INVALID_LIC",
		1024:  "LB_1GIG_LIC",
		10240: "LB_10GIG_LIC",
	}
	InstanceLicense_value = map[string]int32{
		"LB_INVALID_LIC": 0,
		"LB_1GIG_LIC":    1024,
		"LB_10GIG_LIC":   10240,
	}
)

func (x InstanceLicense) Enum() *InstanceLicense {
	p := new(InstanceLicense)
	*p = x
	return p
}

func (x InstanceLicense) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceLicense) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lbservice_lbservice_proto_enumTypes[0].Descriptor()
}

func (InstanceLicense) Type() protoreflect.EnumType {
	return &file_api_lbservice_lbservice_proto_enumTypes[0]
}

func (x InstanceLicense) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceLicense.Descriptor instead.
func (InstanceLicense) EnumDescriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{0, 0}
}

type InstanceLbhealthchk int32

const (
	Instance_nocheck     InstanceLbhealthchk = 0
	Instance_arp         InstanceLbhealthchk = 1
	Instance_clustercfr  InstanceLbhealthchk = 2
	Instance_clustercme  InstanceLbhealthchk = 3
	Instance_dhcp        InstanceLbhealthchk = 4
	Instance_dns         InstanceLbhealthchk = 5
	Instance_dssp        InstanceLbhealthchk = 6
	Instance_ftp         InstanceLbhealthchk = 7
	Instance_h2          InstanceLbhealthchk = 8
	Instance_h2c         InstanceLbhealthchk = 9
	Instance_http        InstanceLbhealthchk = 10
	Instance_httphead    InstanceLbhealthchk = 11
	Instance_https       InstanceLbhealthchk = 12
	Instance_icmp        InstanceLbhealthchk = 13
	Instance_imap        InstanceLbhealthchk = 14
	Instance_ldap        InstanceLbhealthchk = 15
	Instance_ldaps       InstanceLbhealthchk = 16
	Instance_link        InstanceLbhealthchk = 17
	Instance_logexp      InstanceLbhealthchk = 18
	Instance_nntp        InstanceLbhealthchk = 19
	Instance_pop3        InstanceLbhealthchk = 20
	Instance_radius_aa   InstanceLbhealthchk = 21
	Instance_radius_acc  InstanceLbhealthchk = 22
	Instance_radius_auth InstanceLbhealthchk = 23
	Instance_rtsp        InstanceLbhealthchk = 24
	Instance_script      InstanceLbhealthchk = 25
	Instance_sip         InstanceLbhealthchk = 26
	Instance_sipoptions  InstanceLbhealthchk = 27
	Instance_smtp        InstanceLbhealthchk = 28
	Instance_snmp        InstanceLbhealthchk = 29
	Instance_sslh        InstanceLbhealthchk = 30
	Instance_sslhtls     InstanceLbhealthchk = 31
	Instance_sslhv3      InstanceLbhealthchk = 32
	Instance_tcp         InstanceLbhealthchk = 33
	Instance_tcphalfopen InstanceLbhealthchk = 34
	Instance_tftp        InstanceLbhealthchk = 35
	Instance_udp         InstanceLbhealthchk = 36
	Instance_udpdns      InstanceLbhealthchk = 37
	Instance_virtualwire InstanceLbhealthchk = 38
	Instance_wsp         InstanceLbhealthchk = 39
	Instance_wtls        InstanceLbhealthchk = 40
	Instance_wtls_wsp    InstanceLbhealthchk = 41
	Instance_wtls_wtp    InstanceLbhealthchk = 42
	Instance_wtp         InstanceLbhealthchk = 43
	Instance_wts         InstanceLbhealthchk = 44
)

// Enum value maps for InstanceLbhealthchk.
var (
	InstanceLbhealthchk_name = map[int32]string{
		0:  "nocheck",
		1:  "arp",
		2:  "clustercfr",
		3:  "clustercme",
		4:  "dhcp",
		5:  "dns",
		6:  "dssp",
		7:  "ftp",
		8:  "h2",
		9:  "h2c",
		10: "http",
		11: "httphead",
		12: "https",
		13: "icmp",
		14: "imap",
		15: "ldap",
		16: "ldaps",
		17: "link",
		18: "logexp",
		19: "nntp",
		20: "pop3",
		21: "radius_aa",
		22: "radius_acc",
		23: "radius_auth",
		24: "rtsp",
		25: "script",
		26: "sip",
		27: "sipoptions",
		28: "smtp",
		29: "snmp",
		30: "sslh",
		31: "sslhtls",
		32: "sslhv3",
		33: "tcp",
		34: "tcphalfopen",
		35: "tftp",
		36: "udp",
		37: "udpdns",
		38: "virtualwire",
		39: "wsp",
		40: "wtls",
		41: "wtls_wsp",
		42: "wtls_wtp",
		43: "wtp",
		44: "wts",
	}
	InstanceLbhealthchk_value = map[string]int32{
		"nocheck":     0,
		"arp":         1,
		"clustercfr":  2,
		"clustercme":  3,
		"dhcp":        4,
		"dns":         5,
		"dssp":        6,
		"ftp":         7,
		"h2":          8,
		"h2c":         9,
		"http":        10,
		"httphead":    11,
		"https":       12,
		"icmp":        13,
		"imap":        14,
		"ldap":        15,
		"ldaps":       16,
		"link":        17,
		"logexp":      18,
		"nntp":        19,
		"pop3":        20,
		"radius_aa":   21,
		"radius_acc":  22,
		"radius_auth": 23,
		"rtsp":        24,
		"script":      25,
		"sip":         26,
		"sipoptions":  27,
		"smtp":        28,
		"snmp":        29,
		"sslh":        30,
		"sslhtls":     31,
		"sslhv3":      32,
		"tcp":         33,
		"tcphalfopen": 34,
		"tftp":        35,
		"udp":         36,
		"udpdns":      37,
		"virtualwire": 38,
		"wsp":         39,
		"wtls":        40,
		"wtls_wsp":    41,
		"wtls_wtp":    42,
		"wtp":         43,
		"wts":         44,
	}
)

func (x InstanceLbhealthchk) Enum() *InstanceLbhealthchk {
	p := new(InstanceLbhealthchk)
	*p = x
	return p
}

func (x InstanceLbhealthchk) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceLbhealthchk) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lbservice_lbservice_proto_enumTypes[1].Descriptor()
}

func (InstanceLbhealthchk) Type() protoreflect.EnumType {
	return &file_api_lbservice_lbservice_proto_enumTypes[1]
}

func (x InstanceLbhealthchk) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceLbhealthchk.Descriptor instead.
func (InstanceLbhealthchk) EnumDescriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{0, 1}
}

type InstanceLbmetric int32

const (
	Instance_roundrobin                InstanceLbmetric = 0
	Instance_minmisses                 InstanceLbmetric = 1
	Instance_responsetime              InstanceLbmetric = 2
	Instance_serverbandwidth           InstanceLbmetric = 3
	Instance_hash                      InstanceLbmetric = 4
	Instance_persistenthash            InstanceLbmetric = 5
	Instance_leastconnectionperservice InstanceLbmetric = 6
	Instance_highestrandomweight       InstanceLbmetric = 7
)

// Enum value maps for InstanceLbmetric.
var (
	InstanceLbmetric_name = map[int32]string{
		0: "roundrobin",
		1: "minmisses",
		2: "responsetime",
		3: "serverbandwidth",
		4: "hash",
		5: "persistenthash",
		6: "leastconnectionperservice",
		7: "highestrandomweight",
	}
	InstanceLbmetric_value = map[string]int32{
		"roundrobin":                0,
		"minmisses":                 1,
		"responsetime":              2,
		"serverbandwidth":           3,
		"hash":                      4,
		"persistenthash":            5,
		"leastconnectionperservice": 6,
		"highestrandomweight":       7,
	}
)

func (x InstanceLbmetric) Enum() *InstanceLbmetric {
	p := new(InstanceLbmetric)
	*p = x
	return p
}

func (x InstanceLbmetric) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceLbmetric) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lbservice_lbservice_proto_enumTypes[2].Descriptor()
}

func (InstanceLbmetric) Type() protoreflect.EnumType {
	return &file_api_lbservice_lbservice_proto_enumTypes[2]
}

func (x InstanceLbmetric) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceLbmetric.Descriptor instead.
func (InstanceLbmetric) EnumDescriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{0, 2}
}

type L4FilterAction int32

const (
	L4Filter_allow       L4FilterAction = 0
	L4Filter_deny        L4FilterAction = 1
	L4Filter_nat         L4FilterAction = 2
	L4Filter_redirect    L4FilterAction = 3
	L4Filter_goto        L4FilterAction = 4
	L4Filter_outboundllb L4FilterAction = 5
)

// Enum value maps for L4FilterAction.
var (
	L4FilterAction_name = map[int32]string{
		0: "allow",
		1: "deny",
		2: "nat",
		3: "redirect",
		4: "goto",
		5: "outboundllb",
	}
	L4FilterAction_value = map[string]int32{
		"allow":       0,
		"deny":        1,
		"nat":         2,
		"redirect":    3,
		"goto":        4,
		"outboundllb": 5,
	}
)

func (x L4FilterAction) Enum() *L4FilterAction {
	p := new(L4FilterAction)
	*p = x
	return p
}

func (x L4FilterAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (L4FilterAction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lbservice_lbservice_proto_enumTypes[3].Descriptor()
}

func (L4FilterAction) Type() protoreflect.EnumType {
	return &file_api_lbservice_lbservice_proto_enumTypes[3]
}

func (x L4FilterAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use L4FilterAction.Descriptor instead.
func (L4FilterAction) EnumDescriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{9, 0}
}

type L4Filter_Operation int32

const (
	L4Filter_ADD    L4Filter_Operation = 0
	L4Filter_DELETE L4Filter_Operation = 1
)

// Enum value maps for L4Filter_Operation.
var (
	L4Filter_Operation_name = map[int32]string{
		0: "ADD",
		1: "DELETE",
	}
	L4Filter_Operation_value = map[string]int32{
		"ADD":    0,
		"DELETE": 1,
	}
)

func (x L4Filter_Operation) Enum() *L4Filter_Operation {
	p := new(L4Filter_Operation)
	*p = x
	return p
}

func (x L4Filter_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (L4Filter_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lbservice_lbservice_proto_enumTypes[4].Descriptor()
}

func (L4Filter_Operation) Type() protoreflect.EnumType {
	return &file_api_lbservice_lbservice_proto_enumTypes[4]
}

func (x L4Filter_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use L4Filter_Operation.Descriptor instead.
func (L4Filter_Operation) EnumDescriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{9, 1}
}

type EndPointCfg_Operation int32

const (
	EndPointCfg_ADD    EndPointCfg_Operation = 0
	EndPointCfg_DELETE EndPointCfg_Operation = 1
)

// Enum value maps for EndPointCfg_Operation.
var (
	EndPointCfg_Operation_name = map[int32]string{
		0: "ADD",
		1: "DELETE",
	}
	EndPointCfg_Operation_value = map[string]int32{
		"ADD":    0,
		"DELETE": 1,
	}
)

func (x EndPointCfg_Operation) Enum() *EndPointCfg_Operation {
	p := new(EndPointCfg_Operation)
	*p = x
	return p
}

func (x EndPointCfg_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EndPointCfg_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lbservice_lbservice_proto_enumTypes[5].Descriptor()
}

func (EndPointCfg_Operation) Type() protoreflect.EnumType {
	return &file_api_lbservice_lbservice_proto_enumTypes[5]
}

func (x EndPointCfg_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EndPointCfg_Operation.Descriptor instead.
func (EndPointCfg_Operation) EnumDescriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{12, 0}
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MgmtMacAddr   string `protobuf:"bytes,1,opt,name=mgmt_mac_addr,json=mgmtMacAddr,proto3" json:"mgmt_mac_addr,omitempty"`
	MgmtIpAddr    string `protobuf:"bytes,2,opt,name=mgmt_ip_addr,json=mgmtIpAddr,proto3" json:"mgmt_ip_addr,omitempty"`
	Label         string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Lic           int32  `protobuf:"varint,4,opt,name=lic,proto3" json:"lic,omitempty"`
	LicToken      string `protobuf:"bytes,5,opt,name=lic_token,json=licToken,proto3" json:"lic_token,omitempty"`
	Vip           string `protobuf:"bytes,6,opt,name=vip,proto3" json:"vip,omitempty"`
	LbUserName    string `protobuf:"bytes,7,opt,name=lb_user_name,json=lbUserName,proto3" json:"lb_user_name,omitempty"`
	LbPassword    string `protobuf:"bytes,8,opt,name=lb_password,json=lbPassword,proto3" json:"lb_password,omitempty"`
	LbHttpsPort   int32  `protobuf:"varint,9,opt,name=lb_https_port,json=lbHttpsPort,proto3" json:"lb_https_port,omitempty"`
	LbHealth      string `protobuf:"bytes,10,opt,name=lb_health,json=lbHealth,proto3" json:"lb_health,omitempty"`
	LbMetric      string `protobuf:"bytes,11,opt,name=lb_metric,json=lbMetric,proto3" json:"lb_metric,omitempty"`
	LbDsr         bool   `protobuf:"varint,12,opt,name=lb_dsr,json=lbDsr,proto3" json:"lb_dsr,omitempty"`
	LbGroupName   string `protobuf:"bytes,13,opt,name=lb_group_name,json=lbGroupName,proto3" json:"lb_group_name,omitempty"`
	LbServiceName string `protobuf:"bytes,14,opt,name=lb_service_name,json=lbServiceName,proto3" json:"lb_service_name,omitempty"`
	LbL4Port      int32  `protobuf:"varint,15,opt,name=lb_l4_port,json=lbL4Port,proto3" json:"lb_l4_port,omitempty"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{0}
}

func (x *Instance) GetMgmtMacAddr() string {
	if x != nil {
		return x.MgmtMacAddr
	}
	return ""
}

func (x *Instance) GetMgmtIpAddr() string {
	if x != nil {
		return x.MgmtIpAddr
	}
	return ""
}

func (x *Instance) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Instance) GetLic() int32 {
	if x != nil {
		return x.Lic
	}
	return 0
}

func (x *Instance) GetLicToken() string {
	if x != nil {
		return x.LicToken
	}
	return ""
}

func (x *Instance) GetVip() string {
	if x != nil {
		return x.Vip
	}
	return ""
}

func (x *Instance) GetLbUserName() string {
	if x != nil {
		return x.LbUserName
	}
	return ""
}

func (x *Instance) GetLbPassword() string {
	if x != nil {
		return x.LbPassword
	}
	return ""
}

func (x *Instance) GetLbHttpsPort() int32 {
	if x != nil {
		return x.LbHttpsPort
	}
	return 0
}

func (x *Instance) GetLbHealth() string {
	if x != nil {
		return x.LbHealth
	}
	return ""
}

func (x *Instance) GetLbMetric() string {
	if x != nil {
		return x.LbMetric
	}
	return ""
}

func (x *Instance) GetLbDsr() bool {
	if x != nil {
		return x.LbDsr
	}
	return false
}

func (x *Instance) GetLbGroupName() string {
	if x != nil {
		return x.LbGroupName
	}
	return ""
}

func (x *Instance) GetLbServiceName() string {
	if x != nil {
		return x.LbServiceName
	}
	return ""
}

func (x *Instance) GetLbL4Port() int32 {
	if x != nil {
		return x.LbL4Port
	}
	return 0
}

type InstanceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *InstanceId) Reset() {
	*x = InstanceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceId) ProtoMessage() {}

func (x *InstanceId) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceId.ProtoReflect.Descriptor instead.
func (*InstanceId) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{1}
}

func (x *InstanceId) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type CreateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *Instance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	TestOnly bool      `protobuf:"varint,2,opt,name=test_only,json=testOnly,proto3" json:"test_only,omitempty"`
}

func (x *CreateInstanceRequest) Reset() {
	*x = CreateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceRequest) ProtoMessage() {}

func (x *CreateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{2}
}

func (x *CreateInstanceRequest) GetInstance() *Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *CreateInstanceRequest) GetTestOnly() bool {
	if x != nil {
		return x.TestOnly
	}
	return false
}

type CreateInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *InstanceId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateInstanceResponse) Reset() {
	*x = CreateInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceResponse) ProtoMessage() {}

func (x *CreateInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceResponse.ProtoReflect.Descriptor instead.
func (*CreateInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{3}
}

func (x *CreateInstanceResponse) GetId() *InstanceId {
	if x != nil {
		return x.Id
	}
	return nil
}

type DestroyInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label         string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	LbServiceName string `protobuf:"bytes,2,opt,name=lb_service_name,json=lbServiceName,proto3" json:"lb_service_name,omitempty"`
	TestOnly      bool   `protobuf:"varint,3,opt,name=test_only,json=testOnly,proto3" json:"test_only,omitempty"`
}

func (x *DestroyInstanceRequest) Reset() {
	*x = DestroyInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyInstanceRequest) ProtoMessage() {}

func (x *DestroyInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyInstanceRequest.ProtoReflect.Descriptor instead.
func (*DestroyInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{4}
}

func (x *DestroyInstanceRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DestroyInstanceRequest) GetLbServiceName() string {
	if x != nil {
		return x.LbServiceName
	}
	return ""
}

func (x *DestroyInstanceRequest) GetTestOnly() bool {
	if x != nil {
		return x.TestOnly
	}
	return false
}

type DestroyInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestroyInstanceResp bool `protobuf:"varint,1,opt,name=destroy_instance_resp,json=destroyInstanceResp,proto3" json:"destroy_instance_resp,omitempty"`
}

func (x *DestroyInstanceResponse) Reset() {
	*x = DestroyInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyInstanceResponse) ProtoMessage() {}

func (x *DestroyInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyInstanceResponse.ProtoReflect.Descriptor instead.
func (*DestroyInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{5}
}

func (x *DestroyInstanceResponse) GetDestroyInstanceResp() bool {
	if x != nil {
		return x.DestroyInstanceResp
	}
	return false
}

type L3Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *InstanceId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label           string      `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	LbInterfaceName string      `protobuf:"bytes,3,opt,name=lb_interface_name,json=lbInterfaceName,proto3" json:"lb_interface_name,omitempty"`
	LbVlan          int32       `protobuf:"varint,4,opt,name=lb_vlan,json=lbVlan,proto3" json:"lb_vlan,omitempty"`
	LbPrimaryIp     string      `protobuf:"bytes,5,opt,name=lb_primary_ip,json=lbPrimaryIp,proto3" json:"lb_primary_ip,omitempty"`
	LbSecondaryIp   string      `protobuf:"bytes,6,opt,name=lb_secondary_ip,json=lbSecondaryIp,proto3" json:"lb_secondary_ip,omitempty"`
	LbIpMask        string      `protobuf:"bytes,7,opt,name=lb_ip_mask,json=lbIpMask,proto3" json:"lb_ip_mask,omitempty"`
	LbPort          int32       `protobuf:"varint,8,opt,name=lb_port,json=lbPort,proto3" json:"lb_port,omitempty"`
	LbIsV4          bool        `protobuf:"varint,9,opt,name=lb_is_v4,json=lbIsV4,proto3" json:"lb_is_v4,omitempty"`
	EnableHa        bool        `protobuf:"varint,10,opt,name=enable_ha,json=enableHa,proto3" json:"enable_ha,omitempty"`
}

func (x *L3Interface) Reset() {
	*x = L3Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L3Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L3Interface) ProtoMessage() {}

func (x *L3Interface) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L3Interface.ProtoReflect.Descriptor instead.
func (*L3Interface) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{6}
}

func (x *L3Interface) GetId() *InstanceId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *L3Interface) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *L3Interface) GetLbInterfaceName() string {
	if x != nil {
		return x.LbInterfaceName
	}
	return ""
}

func (x *L3Interface) GetLbVlan() int32 {
	if x != nil {
		return x.LbVlan
	}
	return 0
}

func (x *L3Interface) GetLbPrimaryIp() string {
	if x != nil {
		return x.LbPrimaryIp
	}
	return ""
}

func (x *L3Interface) GetLbSecondaryIp() string {
	if x != nil {
		return x.LbSecondaryIp
	}
	return ""
}

func (x *L3Interface) GetLbIpMask() string {
	if x != nil {
		return x.LbIpMask
	}
	return ""
}

func (x *L3Interface) GetLbPort() int32 {
	if x != nil {
		return x.LbPort
	}
	return 0
}

func (x *L3Interface) GetLbIsV4() bool {
	if x != nil {
		return x.LbIsV4
	}
	return false
}

func (x *L3Interface) GetEnableHa() bool {
	if x != nil {
		return x.EnableHa
	}
	return false
}

type CfgL3InterfacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interfaces []*L3Interface `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	TestOnly   bool           `protobuf:"varint,2,opt,name=test_only,json=testOnly,proto3" json:"test_only,omitempty"`
}

func (x *CfgL3InterfacesRequest) Reset() {
	*x = CfgL3InterfacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgL3InterfacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgL3InterfacesRequest) ProtoMessage() {}

func (x *CfgL3InterfacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgL3InterfacesRequest.ProtoReflect.Descriptor instead.
func (*CfgL3InterfacesRequest) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{7}
}

func (x *CfgL3InterfacesRequest) GetInterfaces() []*L3Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *CfgL3InterfacesRequest) GetTestOnly() bool {
	if x != nil {
		return x.TestOnly
	}
	return false
}

type CfgL3InterfacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgL3InterfacesResp bool `protobuf:"varint,1,opt,name=cfg_l3_interfaces_resp,json=cfgL3InterfacesResp,proto3" json:"cfg_l3_interfaces_resp,omitempty"`
}

func (x *CfgL3InterfacesResponse) Reset() {
	*x = CfgL3InterfacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgL3InterfacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgL3InterfacesResponse) ProtoMessage() {}

func (x *CfgL3InterfacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgL3InterfacesResponse.ProtoReflect.Descriptor instead.
func (*CfgL3InterfacesResponse) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{8}
}

func (x *CfgL3InterfacesResponse) GetCfgL3InterfacesResp() bool {
	if x != nil {
		return x.CfgL3InterfacesResp
	}
	return false
}

type L4Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *InstanceId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label           string      `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Name            string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	RuleId          int32       `protobuf:"varint,4,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Act             string      `protobuf:"bytes,5,opt,name=act,proto3" json:"act,omitempty"`
	LbIsV4          bool        `protobuf:"varint,6,opt,name=lb_is_v4,json=lbIsV4,proto3" json:"lb_is_v4,omitempty"`
	SrcIp           string      `protobuf:"bytes,7,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	SrcMask         string      `protobuf:"bytes,8,opt,name=src_mask,json=srcMask,proto3" json:"src_mask,omitempty"`
	DstIp           string      `protobuf:"bytes,9,opt,name=dst_ip,json=dstIp,proto3" json:"dst_ip,omitempty"`
	DstMask         string      `protobuf:"bytes,10,opt,name=dst_mask,json=dstMask,proto3" json:"dst_mask,omitempty"`
	Group           string      `protobuf:"bytes,11,opt,name=group,proto3" json:"group,omitempty"`
	Port            int32       `protobuf:"varint,12,opt,name=port,proto3" json:"port,omitempty"`
	Vlan            string      `protobuf:"bytes,13,opt,name=vlan,proto3" json:"vlan,omitempty"`
	Protocol        string      `protobuf:"bytes,14,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ReverseSession  bool        `protobuf:"varint,15,opt,name=reverse_session,json=reverseSession,proto3" json:"reverse_session,omitempty"`
	ReturnToLastHop bool        `protobuf:"varint,16,opt,name=return_to_last_hop,json=returnToLastHop,proto3" json:"return_to_last_hop,omitempty"`
	Op              string      `protobuf:"bytes,17,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *L4Filter) Reset() {
	*x = L4Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L4Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L4Filter) ProtoMessage() {}

func (x *L4Filter) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L4Filter.ProtoReflect.Descriptor instead.
func (*L4Filter) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{9}
}

func (x *L4Filter) GetId() *InstanceId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *L4Filter) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *L4Filter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *L4Filter) GetRuleId() int32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *L4Filter) GetAct() string {
	if x != nil {
		return x.Act
	}
	return ""
}

func (x *L4Filter) GetLbIsV4() bool {
	if x != nil {
		return x.LbIsV4
	}
	return false
}

func (x *L4Filter) GetSrcIp() string {
	if x != nil {
		return x.SrcIp
	}
	return ""
}

func (x *L4Filter) GetSrcMask() string {
	if x != nil {
		return x.SrcMask
	}
	return ""
}

func (x *L4Filter) GetDstIp() string {
	if x != nil {
		return x.DstIp
	}
	return ""
}

func (x *L4Filter) GetDstMask() string {
	if x != nil {
		return x.DstMask
	}
	return ""
}

func (x *L4Filter) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *L4Filter) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *L4Filter) GetVlan() string {
	if x != nil {
		return x.Vlan
	}
	return ""
}

func (x *L4Filter) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *L4Filter) GetReverseSession() bool {
	if x != nil {
		return x.ReverseSession
	}
	return false
}

func (x *L4Filter) GetReturnToLastHop() bool {
	if x != nil {
		return x.ReturnToLastHop
	}
	return false
}

func (x *L4Filter) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type CfgL4FilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filt     []*L4Filter `protobuf:"bytes,1,rep,name=filt,proto3" json:"filt,omitempty"`
	TestOnly bool        `protobuf:"varint,2,opt,name=test_only,json=testOnly,proto3" json:"test_only,omitempty"`
}

func (x *CfgL4FilterRequest) Reset() {
	*x = CfgL4FilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgL4FilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgL4FilterRequest) ProtoMessage() {}

func (x *CfgL4FilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgL4FilterRequest.ProtoReflect.Descriptor instead.
func (*CfgL4FilterRequest) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{10}
}

func (x *CfgL4FilterRequest) GetFilt() []*L4Filter {
	if x != nil {
		return x.Filt
	}
	return nil
}

func (x *CfgL4FilterRequest) GetTestOnly() bool {
	if x != nil {
		return x.TestOnly
	}
	return false
}

type CfgL4FilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgL4FilterResp bool `protobuf:"varint,1,opt,name=cfg_l4_filter_resp,json=cfgL4FilterResp,proto3" json:"cfg_l4_filter_resp,omitempty"`
}

func (x *CfgL4FilterResponse) Reset() {
	*x = CfgL4FilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgL4FilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgL4FilterResponse) ProtoMessage() {}

func (x *CfgL4FilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgL4FilterResponse.ProtoReflect.Descriptor instead.
func (*CfgL4FilterResponse) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{11}
}

func (x *CfgL4FilterResponse) GetCfgL4FilterResp() bool {
	if x != nil {
		return x.CfgL4FilterResp
	}
	return false
}

type EndPointCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *InstanceId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label            string      `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	IpAddress        string      `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Op               int32       `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
	AsacInstanceName string      `protobuf:"bytes,5,opt,name=asac_instance_name,json=asacInstanceName,proto3" json:"asac_instance_name,omitempty"`
	LbGroupName      string      `protobuf:"bytes,6,opt,name=lb_group_name,json=lbGroupName,proto3" json:"lb_group_name,omitempty"`
	LbServiceName    string      `protobuf:"bytes,7,opt,name=lb_service_name,json=lbServiceName,proto3" json:"lb_service_name,omitempty"`
}

func (x *EndPointCfg) Reset() {
	*x = EndPointCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPointCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPointCfg) ProtoMessage() {}

func (x *EndPointCfg) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPointCfg.ProtoReflect.Descriptor instead.
func (*EndPointCfg) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{12}
}

func (x *EndPointCfg) GetId() *InstanceId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *EndPointCfg) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *EndPointCfg) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *EndPointCfg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *EndPointCfg) GetAsacInstanceName() string {
	if x != nil {
		return x.AsacInstanceName
	}
	return ""
}

func (x *EndPointCfg) GetLbGroupName() string {
	if x != nil {
		return x.LbGroupName
	}
	return ""
}

func (x *EndPointCfg) GetLbServiceName() string {
	if x != nil {
		return x.LbServiceName
	}
	return ""
}

type ProvisionEndPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ep       []*EndPointCfg `protobuf:"bytes,1,rep,name=ep,proto3" json:"ep,omitempty"`
	TestOnly bool           `protobuf:"varint,2,opt,name=test_only,json=testOnly,proto3" json:"test_only,omitempty"`
}

func (x *ProvisionEndPointRequest) Reset() {
	*x = ProvisionEndPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionEndPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionEndPointRequest) ProtoMessage() {}

func (x *ProvisionEndPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionEndPointRequest.ProtoReflect.Descriptor instead.
func (*ProvisionEndPointRequest) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{13}
}

func (x *ProvisionEndPointRequest) GetEp() []*EndPointCfg {
	if x != nil {
		return x.Ep
	}
	return nil
}

func (x *ProvisionEndPointRequest) GetTestOnly() bool {
	if x != nil {
		return x.TestOnly
	}
	return false
}

type ProvisionEndPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvisionEndPointResp bool `protobuf:"varint,1,opt,name=provision_end_point_resp,json=provisionEndPointResp,proto3" json:"provision_end_point_resp,omitempty"`
}

func (x *ProvisionEndPointResponse) Reset() {
	*x = ProvisionEndPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionEndPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionEndPointResponse) ProtoMessage() {}

func (x *ProvisionEndPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionEndPointResponse.ProtoReflect.Descriptor instead.
func (*ProvisionEndPointResponse) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{14}
}

func (x *ProvisionEndPointResponse) GetProvisionEndPointResp() bool {
	if x != nil {
		return x.ProvisionEndPointResp
	}
	return false
}

type EndPointInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress        string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	AsacInstanceName string `protobuf:"bytes,2,opt,name=asac_instance_name,json=asacInstanceName,proto3" json:"asac_instance_name,omitempty"`
}

func (x *EndPointInstance) Reset() {
	*x = EndPointInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPointInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPointInstance) ProtoMessage() {}

func (x *EndPointInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPointInstance.ProtoReflect.Descriptor instead.
func (*EndPointInstance) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{15}
}

func (x *EndPointInstance) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *EndPointInstance) GetAsacInstanceName() string {
	if x != nil {
		return x.AsacInstanceName
	}
	return ""
}

type QueryInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	TestOnly bool   `protobuf:"varint,2,opt,name=test_only,json=testOnly,proto3" json:"test_only,omitempty"`
}

func (x *QueryInstanceRequest) Reset() {
	*x = QueryInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInstanceRequest) ProtoMessage() {}

func (x *QueryInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInstanceRequest.ProtoReflect.Descriptor instead.
func (*QueryInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{16}
}

func (x *QueryInstanceRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *QueryInstanceRequest) GetTestOnly() bool {
	if x != nil {
		return x.TestOnly
	}
	return false
}

type QueryInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryInstance []*EndPointInstance `protobuf:"bytes,1,rep,name=query_instance,json=queryInstance,proto3" json:"query_instance,omitempty"`
}

func (x *QueryInstanceResponse) Reset() {
	*x = QueryInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInstanceResponse) ProtoMessage() {}

func (x *QueryInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInstanceResponse.ProtoReflect.Descriptor instead.
func (*QueryInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{17}
}

func (x *QueryInstanceResponse) GetQueryInstance() []*EndPointInstance {
	if x != nil {
		return x.QueryInstance
	}
	return nil
}

type QueryAllInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryAllInstancesRequest) Reset() {
	*x = QueryAllInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllInstancesRequest) ProtoMessage() {}

func (x *QueryAllInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllInstancesRequest.ProtoReflect.Descriptor instead.
func (*QueryAllInstancesRequest) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{18}
}

type QueryAllInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryIdsList []*InstanceId `protobuf:"bytes,1,rep,name=query_ids_list,json=queryIdsList,proto3" json:"query_ids_list,omitempty"`
}

func (x *QueryAllInstancesResponse) Reset() {
	*x = QueryAllInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lbservice_lbservice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllInstancesResponse) ProtoMessage() {}

func (x *QueryAllInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lbservice_lbservice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllInstancesResponse.ProtoReflect.Descriptor instead.
func (*QueryAllInstancesResponse) Descriptor() ([]byte, []int) {
	return file_api_lbservice_lbservice_proto_rawDescGZIP(), []int{19}
}

func (x *QueryAllInstancesResponse) GetQueryIdsList() []*InstanceId {
	if x != nil {
		return x.QueryIdsList
	}
	return nil
}

var File_api_lbservice_lbservice_proto protoreflect.FileDescriptor

var file_api_lbservice_lbservice_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x62, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x6c, 0x62, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x22, 0xca, 0x09,
	0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x67,
	0x6d, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x67, 0x6d, 0x74, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x20,
	0x0a, 0x0c, 0x6d, 0x67, 0x6d, 0x74, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x67, 0x6d, 0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x63, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x63,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x62, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x62, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x62, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x62, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x62,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6c, 0x62, 0x48, 0x74, 0x74, 0x70, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x62, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x62, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x62, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x62, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x62, 0x5f, 0x64,
	0x73, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x62, 0x44, 0x73, 0x72, 0x12,
	0x22, 0x0a, 0x0d, 0x6c, 0x62, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x62,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x6c,
	0x62, 0x5f, 0x6c, 0x34, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6c, 0x62, 0x4c, 0x34, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x42, 0x0a, 0x07, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x42, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x4c, 0x49, 0x43, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0b, 0x4c, 0x42, 0x5f, 0x31,
	0x47, 0x49, 0x47, 0x5f, 0x4c, 0x49, 0x43, 0x10, 0x80, 0x08, 0x12, 0x11, 0x0a, 0x0c, 0x4c, 0x42,
	0x5f, 0x31, 0x30, 0x47, 0x49, 0x47, 0x5f, 0x4c, 0x49, 0x43, 0x10, 0x80, 0x50, 0x22, 0x91, 0x04,
	0x0a, 0x0b, 0x6c, 0x62, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x6b, 0x12, 0x0b, 0x0a,
	0x07, 0x6e, 0x6f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x72,
	0x70, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x63, 0x66,
	0x72, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x63, 0x6d,
	0x65, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x68, 0x63, 0x70, 0x10, 0x04, 0x12, 0x07, 0x0a,
	0x03, 0x64, 0x6e, 0x73, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x73, 0x73, 0x70, 0x10, 0x06,
	0x12, 0x07, 0x0a, 0x03, 0x66, 0x74, 0x70, 0x10, 0x07, 0x12, 0x06, 0x0a, 0x02, 0x68, 0x32, 0x10,
	0x08, 0x12, 0x07, 0x0a, 0x03, 0x68, 0x32, 0x63, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x68, 0x65, 0x61, 0x64,
	0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x68, 0x74, 0x74, 0x70, 0x73, 0x10, 0x0c, 0x12, 0x08, 0x0a,
	0x04, 0x69, 0x63, 0x6d, 0x70, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x69, 0x6d, 0x61, 0x70, 0x10,
	0x0e, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x64, 0x61, 0x70, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x6c,
	0x64, 0x61, 0x70, 0x73, 0x10, 0x10, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x10, 0x11,
	0x12, 0x0a, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x65, 0x78, 0x70, 0x10, 0x12, 0x12, 0x08, 0x0a, 0x04,
	0x6e, 0x6e, 0x74, 0x70, 0x10, 0x13, 0x12, 0x08, 0x0a, 0x04, 0x70, 0x6f, 0x70, 0x33, 0x10, 0x14,
	0x12, 0x0d, 0x0a, 0x09, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x61, 0x61, 0x10, 0x15, 0x12,
	0x0e, 0x0a, 0x0a, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x10, 0x16, 0x12,
	0x0f, 0x0a, 0x0b, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x10, 0x17,
	0x12, 0x08, 0x0a, 0x04, 0x72, 0x74, 0x73, 0x70, 0x10, 0x18, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x10, 0x19, 0x12, 0x07, 0x0a, 0x03, 0x73, 0x69, 0x70, 0x10, 0x1a, 0x12,
	0x0e, 0x0a, 0x0a, 0x73, 0x69, 0x70, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x1b, 0x12,
	0x08, 0x0a, 0x04, 0x73, 0x6d, 0x74, 0x70, 0x10, 0x1c, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x6e, 0x6d,
	0x70, 0x10, 0x1d, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x73, 0x6c, 0x68, 0x10, 0x1e, 0x12, 0x0b, 0x0a,
	0x07, 0x73, 0x73, 0x6c, 0x68, 0x74, 0x6c, 0x73, 0x10, 0x1f, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x73,
	0x6c, 0x68, 0x76, 0x33, 0x10, 0x20, 0x12, 0x07, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x10, 0x21, 0x12,
	0x0f, 0x0a, 0x0b, 0x74, 0x63, 0x70, 0x68, 0x61, 0x6c, 0x66, 0x6f, 0x70, 0x65, 0x6e, 0x10, 0x22,
	0x12, 0x08, 0x0a, 0x04, 0x74, 0x66, 0x74, 0x70, 0x10, 0x23, 0x12, 0x07, 0x0a, 0x03, 0x75, 0x64,
	0x70, 0x10, 0x24, 0x12, 0x0a, 0x0a, 0x06, 0x75, 0x64, 0x70, 0x64, 0x6e, 0x73, 0x10, 0x25, 0x12,
	0x0f, 0x0a, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x77, 0x69, 0x72, 0x65, 0x10, 0x26,
	0x12, 0x07, 0x0a, 0x03, 0x77, 0x73, 0x70, 0x10, 0x27, 0x12, 0x08, 0x0a, 0x04, 0x77, 0x74, 0x6c,
	0x73, 0x10, 0x28, 0x12, 0x0c, 0x0a, 0x08, 0x77, 0x74, 0x6c, 0x73, 0x5f, 0x77, 0x73, 0x70, 0x10,
	0x29, 0x12, 0x0c, 0x0a, 0x08, 0x77, 0x74, 0x6c, 0x73, 0x5f, 0x77, 0x74, 0x70, 0x10, 0x2a, 0x12,
	0x07, 0x0a, 0x03, 0x77, 0x74, 0x70, 0x10, 0x2b, 0x12, 0x07, 0x0a, 0x03, 0x77, 0x74, 0x73, 0x10,
	0x2c, 0x22, 0xa6, 0x01, 0x0a, 0x08, 0x6c, 0x62, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x0e,
	0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x6f, 0x62, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x68, 0x61, 0x73, 0x68,
	0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10,
	0x06, 0x12, 0x17, 0x0a, 0x13, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x10, 0x07, 0x22, 0x2d, 0x0a, 0x0a, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4f,
	0x6e, 0x6c, 0x79, 0x22, 0x42, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x73, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x62, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x4d, 0x0a, 0x17,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xcc, 0x02, 0x0a, 0x0b,
	0x4c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6c,
	0x62, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x62, 0x5f, 0x76, 0x6c,
	0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x62, 0x56, 0x6c, 0x61, 0x6e,
	0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x62, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x69,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x62, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x49, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x62, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c,
	0x62, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x70, 0x12, 0x1c, 0x0a, 0x0a,
	0x6c, 0x62, 0x5f, 0x69, 0x70, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x62, 0x49, 0x70, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x62,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x08, 0x6c, 0x62, 0x5f, 0x69, 0x73, 0x5f, 0x76, 0x34, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x62, 0x49, 0x73, 0x56, 0x34, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x22, 0x70, 0x0a, 0x16, 0x43, 0x66,
	0x67, 0x4c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x4c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x4e, 0x0a, 0x17,
	0x43, 0x66, 0x67, 0x4c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x66, 0x67, 0x5f, 0x6c,
	0x33, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x66, 0x67, 0x4c, 0x33, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0xba, 0x04, 0x0a,
	0x08, 0x4c, 0x34, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x08, 0x6c, 0x62, 0x5f, 0x69,
	0x73, 0x5f, 0x76, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x62, 0x49, 0x73,
	0x56, 0x34, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x73, 0x74, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x73, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x76, 0x6c, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x4c,
	0x61, 0x73, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x4f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x09, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x64,
	0x65, 0x6e, 0x79, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x6e, 0x61, 0x74, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x67, 0x6f, 0x74, 0x6f, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x6c, 0x6c, 0x62, 0x10, 0x05, 0x22, 0x20, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x22, 0x5d, 0x0a, 0x12, 0x43, 0x66, 0x67,
	0x4c, 0x34, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x4c, 0x34, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x42, 0x0a, 0x13, 0x43, 0x66, 0x67, 0x4c,
	0x34, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x12, 0x63, 0x66, 0x67, 0x5f, 0x6c, 0x34, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x66, 0x67,
	0x4c, 0x34, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x98, 0x02, 0x0a,
	0x0b, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x66, 0x67, 0x12, 0x28, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x61,
	0x73, 0x61, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x73, 0x61, 0x63, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x62, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x22, 0x62, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x65, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x45,
	0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x66, 0x67, 0x52, 0x02, 0x65, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x54, 0x0a, 0x19, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x5f, 0x0a, 0x10, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x73, 0x61, 0x63, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x61, 0x73, 0x61, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x49, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x5e, 0x0a,
	0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x45, 0x6e,
	0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0d,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x1a, 0x0a,
	0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x19, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xf2, 0x04, 0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x23, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5e, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x34, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x43, 0x66, 0x67, 0x4c, 0x34, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x43, 0x66, 0x67, 0x4c, 0x34, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x4c,
	0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x43, 0x66, 0x67, 0x4c,
	0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x2e, 0x43, 0x66, 0x67, 0x4c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x61,
	0x70, 0x69, 0x2f, 0x6c, 0x62, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_lbservice_lbservice_proto_rawDescOnce sync.Once
	file_api_lbservice_lbservice_proto_rawDescData = file_api_lbservice_lbservice_proto_rawDesc
)

func file_api_lbservice_lbservice_proto_rawDescGZIP() []byte {
	file_api_lbservice_lbservice_proto_rawDescOnce.Do(func() {
		file_api_lbservice_lbservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_lbservice_lbservice_proto_rawDescData)
	})
	return file_api_lbservice_lbservice_proto_rawDescData
}

var file_api_lbservice_lbservice_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_lbservice_lbservice_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_lbservice_lbservice_proto_goTypes = []interface{}{
	(InstanceLicense)(0),              // 0: LoadBalancer.Instance.license
	(InstanceLbhealthchk)(0),          // 1: LoadBalancer.Instance.lbhealthchk
	(InstanceLbmetric)(0),             // 2: LoadBalancer.Instance.lbmetric
	(L4FilterAction)(0),               // 3: LoadBalancer.L4Filter.action
	(L4Filter_Operation)(0),           // 4: LoadBalancer.L4Filter.Operation
	(EndPointCfg_Operation)(0),        // 5: LoadBalancer.EndPointCfg.Operation
	(*Instance)(nil),                  // 6: LoadBalancer.Instance
	(*InstanceId)(nil),                // 7: LoadBalancer.InstanceId
	(*CreateInstanceRequest)(nil),     // 8: LoadBalancer.CreateInstanceRequest
	(*CreateInstanceResponse)(nil),    // 9: LoadBalancer.CreateInstanceResponse
	(*DestroyInstanceRequest)(nil),    // 10: LoadBalancer.DestroyInstanceRequest
	(*DestroyInstanceResponse)(nil),   // 11: LoadBalancer.DestroyInstanceResponse
	(*L3Interface)(nil),               // 12: LoadBalancer.L3Interface
	(*CfgL3InterfacesRequest)(nil),    // 13: LoadBalancer.CfgL3InterfacesRequest
	(*CfgL3InterfacesResponse)(nil),   // 14: LoadBalancer.CfgL3InterfacesResponse
	(*L4Filter)(nil),                  // 15: LoadBalancer.L4Filter
	(*CfgL4FilterRequest)(nil),        // 16: LoadBalancer.CfgL4FilterRequest
	(*CfgL4FilterResponse)(nil),       // 17: LoadBalancer.CfgL4FilterResponse
	(*EndPointCfg)(nil),               // 18: LoadBalancer.EndPointCfg
	(*ProvisionEndPointRequest)(nil),  // 19: LoadBalancer.ProvisionEndPointRequest
	(*ProvisionEndPointResponse)(nil), // 20: LoadBalancer.ProvisionEndPointResponse
	(*EndPointInstance)(nil),          // 21: LoadBalancer.EndPointInstance
	(*QueryInstanceRequest)(nil),      // 22: LoadBalancer.QueryInstanceRequest
	(*QueryInstanceResponse)(nil),     // 23: LoadBalancer.QueryInstanceResponse
	(*QueryAllInstancesRequest)(nil),  // 24: LoadBalancer.QueryAllInstancesRequest
	(*QueryAllInstancesResponse)(nil), // 25: LoadBalancer.QueryAllInstancesResponse
}
var file_api_lbservice_lbservice_proto_depIdxs = []int32{
	6,  // 0: LoadBalancer.CreateInstanceRequest.instance:type_name -> LoadBalancer.Instance
	7,  // 1: LoadBalancer.CreateInstanceResponse.id:type_name -> LoadBalancer.InstanceId
	7,  // 2: LoadBalancer.L3Interface.id:type_name -> LoadBalancer.InstanceId
	12, // 3: LoadBalancer.CfgL3InterfacesRequest.interfaces:type_name -> LoadBalancer.L3Interface
	7,  // 4: LoadBalancer.L4Filter.id:type_name -> LoadBalancer.InstanceId
	15, // 5: LoadBalancer.CfgL4FilterRequest.filt:type_name -> LoadBalancer.L4Filter
	7,  // 6: LoadBalancer.EndPointCfg.id:type_name -> LoadBalancer.InstanceId
	18, // 7: LoadBalancer.ProvisionEndPointRequest.ep:type_name -> LoadBalancer.EndPointCfg
	21, // 8: LoadBalancer.QueryInstanceResponse.query_instance:type_name -> LoadBalancer.EndPointInstance
	7,  // 9: LoadBalancer.QueryAllInstancesResponse.query_ids_list:type_name -> LoadBalancer.InstanceId
	8,  // 10: LoadBalancer.LoadBalancerService.CreateService:input_type -> LoadBalancer.CreateInstanceRequest
	10, // 11: LoadBalancer.LoadBalancerService.DestroyService:input_type -> LoadBalancer.DestroyInstanceRequest
	19, // 12: LoadBalancer.LoadBalancerService.ProvisionEndPointService:input_type -> LoadBalancer.ProvisionEndPointRequest
	22, // 13: LoadBalancer.LoadBalancerService.QueryInstanceService:input_type -> LoadBalancer.QueryInstanceRequest
	16, // 14: LoadBalancer.LoadBalancerService.ConfigL4FilterService:input_type -> LoadBalancer.CfgL4FilterRequest
	13, // 15: LoadBalancer.LoadBalancerService.ConfigL3InterfacesService:input_type -> LoadBalancer.CfgL3InterfacesRequest
	9,  // 16: LoadBalancer.LoadBalancerService.CreateService:output_type -> LoadBalancer.CreateInstanceResponse
	11, // 17: LoadBalancer.LoadBalancerService.DestroyService:output_type -> LoadBalancer.DestroyInstanceResponse
	20, // 18: LoadBalancer.LoadBalancerService.ProvisionEndPointService:output_type -> LoadBalancer.ProvisionEndPointResponse
	23, // 19: LoadBalancer.LoadBalancerService.QueryInstanceService:output_type -> LoadBalancer.QueryInstanceResponse
	17, // 20: LoadBalancer.LoadBalancerService.ConfigL4FilterService:output_type -> LoadBalancer.CfgL4FilterResponse
	14, // 21: LoadBalancer.LoadBalancerService.ConfigL3InterfacesService:output_type -> LoadBalancer.CfgL3InterfacesResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_lbservice_lbservice_proto_init() }
func file_api_lbservice_lbservice_proto_init() {
	if File_api_lbservice_lbservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_lbservice_lbservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L3Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgL3InterfacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgL3InterfacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L4Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgL4FilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgL4FilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPointCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionEndPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionEndPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPointInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lbservice_lbservice_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_lbservice_lbservice_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_lbservice_lbservice_proto_goTypes,
		DependencyIndexes: file_api_lbservice_lbservice_proto_depIdxs,
		EnumInfos:         file_api_lbservice_lbservice_proto_enumTypes,
		MessageInfos:      file_api_lbservice_lbservice_proto_msgTypes,
	}.Build()
	File_api_lbservice_lbservice_proto = out.File
	file_api_lbservice_lbservice_proto_rawDesc = nil
	file_api_lbservice_lbservice_proto_goTypes = nil
	file_api_lbservice_lbservice_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoadBalancerServiceClient is the client API for LoadBalancerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoadBalancerServiceClient interface {
	CreateService(ctx context.Context, in *CreateInstanceRequest, opts ...grpc.CallOption) (*CreateInstanceResponse, error)
	DestroyService(ctx context.Context, in *DestroyInstanceRequest, opts ...grpc.CallOption) (*DestroyInstanceResponse, error)
	ProvisionEndPointService(ctx context.Context, in *ProvisionEndPointRequest, opts ...grpc.CallOption) (*ProvisionEndPointResponse, error)
	QueryInstanceService(ctx context.Context, in *QueryInstanceRequest, opts ...grpc.CallOption) (*QueryInstanceResponse, error)
	ConfigL4FilterService(ctx context.Context, in *CfgL4FilterRequest, opts ...grpc.CallOption) (*CfgL4FilterResponse, error)
	ConfigL3InterfacesService(ctx context.Context, in *CfgL3InterfacesRequest, opts ...grpc.CallOption) (*CfgL3InterfacesResponse, error)
}

type loadBalancerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLoadBalancerServiceClient(cc grpc.ClientConnInterface) LoadBalancerServiceClient {
	return &loadBalancerServiceClient{cc}
}

func (c *loadBalancerServiceClient) CreateService(ctx context.Context, in *CreateInstanceRequest, opts ...grpc.CallOption) (*CreateInstanceResponse, error) {
	out := new(CreateInstanceResponse)
	err := c.cc.Invoke(ctx, "/LoadBalancer.LoadBalancerService/CreateService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancerServiceClient) DestroyService(ctx context.Context, in *DestroyInstanceRequest, opts ...grpc.CallOption) (*DestroyInstanceResponse, error) {
	out := new(DestroyInstanceResponse)
	err := c.cc.Invoke(ctx, "/LoadBalancer.LoadBalancerService/DestroyService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancerServiceClient) ProvisionEndPointService(ctx context.Context, in *ProvisionEndPointRequest, opts ...grpc.CallOption) (*ProvisionEndPointResponse, error) {
	out := new(ProvisionEndPointResponse)
	err := c.cc.Invoke(ctx, "/LoadBalancer.LoadBalancerService/ProvisionEndPointService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancerServiceClient) QueryInstanceService(ctx context.Context, in *QueryInstanceRequest, opts ...grpc.CallOption) (*QueryInstanceResponse, error) {
	out := new(QueryInstanceResponse)
	err := c.cc.Invoke(ctx, "/LoadBalancer.LoadBalancerService/QueryInstanceService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancerServiceClient) ConfigL4FilterService(ctx context.Context, in *CfgL4FilterRequest, opts ...grpc.CallOption) (*CfgL4FilterResponse, error) {
	out := new(CfgL4FilterResponse)
	err := c.cc.Invoke(ctx, "/LoadBalancer.LoadBalancerService/ConfigL4FilterService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancerServiceClient) ConfigL3InterfacesService(ctx context.Context, in *CfgL3InterfacesRequest, opts ...grpc.CallOption) (*CfgL3InterfacesResponse, error) {
	out := new(CfgL3InterfacesResponse)
	err := c.cc.Invoke(ctx, "/LoadBalancer.LoadBalancerService/ConfigL3InterfacesService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoadBalancerServiceServer is the server API for LoadBalancerService service.
type LoadBalancerServiceServer interface {
	CreateService(context.Context, *CreateInstanceRequest) (*CreateInstanceResponse, error)
	DestroyService(context.Context, *DestroyInstanceRequest) (*DestroyInstanceResponse, error)
	ProvisionEndPointService(context.Context, *ProvisionEndPointRequest) (*ProvisionEndPointResponse, error)
	QueryInstanceService(context.Context, *QueryInstanceRequest) (*QueryInstanceResponse, error)
	ConfigL4FilterService(context.Context, *CfgL4FilterRequest) (*CfgL4FilterResponse, error)
	ConfigL3InterfacesService(context.Context, *CfgL3InterfacesRequest) (*CfgL3InterfacesResponse, error)
}

// UnimplementedLoadBalancerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLoadBalancerServiceServer struct {
}

func (*UnimplementedLoadBalancerServiceServer) CreateService(context.Context, *CreateInstanceRequest) (*CreateInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateService not implemented")
}
func (*UnimplementedLoadBalancerServiceServer) DestroyService(context.Context, *DestroyInstanceRequest) (*DestroyInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyService not implemented")
}
func (*UnimplementedLoadBalancerServiceServer) ProvisionEndPointService(context.Context, *ProvisionEndPointRequest) (*ProvisionEndPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProvisionEndPointService not implemented")
}
func (*UnimplementedLoadBalancerServiceServer) QueryInstanceService(context.Context, *QueryInstanceRequest) (*QueryInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryInstanceService not implemented")
}
func (*UnimplementedLoadBalancerServiceServer) ConfigL4FilterService(context.Context, *CfgL4FilterRequest) (*CfgL4FilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfigL4FilterService not implemented")
}
func (*UnimplementedLoadBalancerServiceServer) ConfigL3InterfacesService(context.Context, *CfgL3InterfacesRequest) (*CfgL3InterfacesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfigL3InterfacesService not implemented")
}

func RegisterLoadBalancerServiceServer(s *grpc.Server, srv LoadBalancerServiceServer) {
	s.RegisterService(&_LoadBalancerService_serviceDesc, srv)
}

func _LoadBalancerService_CreateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServiceServer).CreateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadBalancer.LoadBalancerService/CreateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServiceServer).CreateService(ctx, req.(*CreateInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancerService_DestroyService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServiceServer).DestroyService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadBalancer.LoadBalancerService/DestroyService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServiceServer).DestroyService(ctx, req.(*DestroyInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancerService_ProvisionEndPointService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProvisionEndPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServiceServer).ProvisionEndPointService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadBalancer.LoadBalancerService/ProvisionEndPointService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServiceServer).ProvisionEndPointService(ctx, req.(*ProvisionEndPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancerService_QueryInstanceService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServiceServer).QueryInstanceService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadBalancer.LoadBalancerService/QueryInstanceService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServiceServer).QueryInstanceService(ctx, req.(*QueryInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancerService_ConfigL4FilterService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgL4FilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServiceServer).ConfigL4FilterService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadBalancer.LoadBalancerService/ConfigL4FilterService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServiceServer).ConfigL4FilterService(ctx, req.(*CfgL4FilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancerService_ConfigL3InterfacesService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgL3InterfacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServiceServer).ConfigL3InterfacesService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadBalancer.LoadBalancerService/ConfigL3InterfacesService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServiceServer).ConfigL3InterfacesService(ctx, req.(*CfgL3InterfacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoadBalancerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LoadBalancer.LoadBalancerService",
	HandlerType: (*LoadBalancerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateService",
			Handler:    _LoadBalancerService_CreateService_Handler,
		},
		{
			MethodName: "DestroyService",
			Handler:    _LoadBalancerService_DestroyService_Handler,
		},
		{
			MethodName: "ProvisionEndPointService",
			Handler:    _LoadBalancerService_ProvisionEndPointService_Handler,
		},
		{
			MethodName: "QueryInstanceService",
			Handler:    _LoadBalancerService_QueryInstanceService_Handler,
		},
		{
			MethodName: "ConfigL4FilterService",
			Handler:    _LoadBalancerService_ConfigL4FilterService_Handler,
		},
		{
			MethodName: "ConfigL3InterfacesService",
			Handler:    _LoadBalancerService_ConfigL3InterfacesService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/lbservice/lbservice.proto",
}
